# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app_core/main_gis.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainGis(object):
    def setupUi(self, MainGis):
        MainGis.setObjectName("MainGis")
        MainGis.resize(693, 400)
        MainGis.setAnimated(True)
        MainGis.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainGis)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.uiCentralVLay = QtWidgets.QVBoxLayout()
        self.uiCentralVLay.setSpacing(2)
        self.uiCentralVLay.setObjectName("uiCentralVLay")
        self.uiCanvas = QgsMapCanvas(self.centralwidget)
        self.uiCanvas.setObjectName("uiCanvas")
        self.uiCentralVLay.addWidget(self.uiCanvas)
        self.verticalLayout.addLayout(self.uiCentralVLay)
        MainGis.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainGis)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 693, 21))
        self.menubar.setObjectName("menubar")
        MainGis.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainGis)
        self.statusbar.setObjectName("statusbar")
        MainGis.setStatusBar(self.statusbar)
        self.uiBasicToolbar = QtWidgets.QToolBar(MainGis)
        self.uiBasicToolbar.setMovable(False)
        self.uiBasicToolbar.setFloatable(True)
        self.uiBasicToolbar.setObjectName("uiBasicToolbar")
        MainGis.addToolBar(QtCore.Qt.TopToolBarArea, self.uiBasicToolbar)
        self.actionPan = QtWidgets.QAction(MainGis)
        self.actionPan.setCheckable(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionPan.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPan.setIcon(icon)
        self.actionPan.setObjectName("actionPan")
        self.actionZoomIn = QtWidgets.QAction(MainGis)
        self.actionZoomIn.setCheckable(True)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionZoomIn.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomIn.setIcon(icon1)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomBase = QtWidgets.QAction(MainGis)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionPanToBase.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomBase.setIcon(icon2)
        self.actionZoomBase.setObjectName("actionZoomBase")
        self.actionZoomOut = QtWidgets.QAction(MainGis)
        self.actionZoomOut.setCheckable(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionZoomOut.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomOut.setIcon(icon3)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionZoomePrevious = QtWidgets.QAction(MainGis)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionZoomLast.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomePrevious.setIcon(icon4)
        self.actionZoomePrevious.setObjectName("actionZoomePrevious")
        self.actionDelSelection = QtWidgets.QAction(MainGis)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionDeselectAll.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelSelection.setIcon(icon5)
        self.actionDelSelection.setObjectName("actionDelSelection")
        self.actionZoomToLayer = QtWidgets.QAction(MainGis)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionZoomToLayer.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomToLayer.setIcon(icon6)
        self.actionZoomToLayer.setObjectName("actionZoomToLayer")
        self.actionZoomToSelected = QtWidgets.QAction(MainGis)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionZoomToSelected.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomToSelected.setIcon(icon7)
        self.actionZoomToSelected.setObjectName("actionZoomToSelected")
        self.actionSelectFeature = QtWidgets.QAction(MainGis)
        self.actionSelectFeature.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionSelectRectangle.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSelectFeature.setIcon(icon8)
        self.actionSelectFeature.setObjectName("actionSelectFeature")
        self.actionFeatureInfo = QtWidgets.QAction(MainGis)
        self.actionFeatureInfo.setCheckable(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionIdentify.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFeatureInfo.setIcon(icon9)
        self.actionFeatureInfo.setObjectName("actionFeatureInfo")
        self.actionAddFeature = QtWidgets.QAction(MainGis)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/svg/resources/icons/mActionAddPolygon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddFeature.setIcon(icon10)
        self.actionAddFeature.setObjectName("actionAddFeature")
        self.uiBasicToolbar.addAction(self.actionZoomBase)
        self.uiBasicToolbar.addAction(self.actionPan)
        self.uiBasicToolbar.addAction(self.actionZoomIn)
        self.uiBasicToolbar.addAction(self.actionZoomOut)
        self.uiBasicToolbar.addAction(self.actionZoomePrevious)
        self.uiBasicToolbar.addAction(self.actionZoomToLayer)
        self.uiBasicToolbar.addAction(self.actionZoomToSelected)
        self.uiBasicToolbar.addSeparator()
        self.uiBasicToolbar.addAction(self.actionDelSelection)
        self.uiBasicToolbar.addAction(self.actionSelectFeature)
        self.uiBasicToolbar.addSeparator()
        self.uiBasicToolbar.addAction(self.actionFeatureInfo)
        self.uiBasicToolbar.addSeparator()
        self.uiBasicToolbar.addAction(self.actionAddFeature)
        self.uiBasicToolbar.addSeparator()

        self.retranslateUi(MainGis)
        QtCore.QMetaObject.connectSlotsByName(MainGis)

    def retranslateUi(self, MainGis):
        _translate = QtCore.QCoreApplication.translate
        MainGis.setWindowTitle(_translate("MainGis", "MainWindow"))
        self.uiBasicToolbar.setWindowTitle(_translate("MainGis", "toolBar"))
        self.actionPan.setText(_translate("MainGis", "Kartenfenster verschieben"))
        self.actionZoomIn.setText(_translate("MainGis", "Hineinzoomen"))
        self.actionZoomBase.setText(_translate("MainGis", "zoome zum Basislayer"))
        self.actionZoomOut.setText(_translate("MainGis", "Herauszoomen"))
        self.actionZoomePrevious.setText(_translate("MainGis", "Zoome zum letzen Ausschnitt"))
        self.actionDelSelection.setText(_translate("MainGis", "Auswahl aufheben"))
        self.actionZoomToLayer.setText(_translate("MainGis", "auf Layer zoomen"))
        self.actionZoomToLayer.setToolTip(_translate("MainGis", "auf Layer zoomen"))
        self.actionZoomToSelected.setText(_translate("MainGis", "zu ausgewählten Objekten zoomen"))
        self.actionZoomToSelected.setToolTip(_translate("MainGis", "zu ausgewählten Objekten zoomen"))
        self.actionSelectFeature.setText(_translate("MainGis", "wähle ein Objekt"))
        self.actionSelectFeature.setToolTip(_translate("MainGis", "<html><head/><body><p>wähle ein oder mehrere Objekte aus;</p><p>Mehrere Objekte können durch drücken der STRG-Taste ausgewählt werden.</p></body></html>"))
        self.actionFeatureInfo.setText(_translate("MainGis", "Objektinformationen abrufen"))
        self.actionFeatureInfo.setToolTip(_translate("MainGis", "Objektinformationen abrufen"))
        self.actionAddFeature.setText(_translate("MainGis", "Add"))
from qgis.gui import QgsMapCanvas
import resources_rc
